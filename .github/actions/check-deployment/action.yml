name: Checks deployment of kubenurse

inputs:
  namespace:
    description: Namespace where the kubenurse is deployed
    required: true
    type: string

runs:
  using: "composite"
  steps:
  - name: Check state of pods
    shell: bash
    run: |
      sleep 60 # Wait to generate some checks etc.
      test $(kubectl -n kube-system get pods -l app=kubenurse \
        | wc -l) -eq 4 # Test for 3 Pods + header
      echo "Number of kubenurses is ok"
      test $(kubectl -n kube-system logs -l app=kubenurse \
        | grep -v "I'm ready to help you" \
        | wc -l) -eq 0 \
        # Test that there are no unexpected log lines present
      echo "Logs are ok"
      kubectl -n kube-system get pods -l app=kubenurse \
        -o jsonpath='{range .items[*]}{.status.containerStatuses[0].restartCount}{"\n"}{end}' \
        | (! grep -v 0) # Validate for 0 restarts
      echo "Restart count is ok"
      curl -k -s --resolve \
        ingress-nginx-controller.ingress-nginx.svc.cluster.local:443:127.0.0.1 \
        https://ingress-nginx-controller.ingress-nginx.svc.cluster.local:443/metrics \
        | grep "kubenurse_request_" > /dev/null
      echo "Metrics contain kubenurse specific data"
      curl -k -s --resolve \
        ingress-nginx-controller.ingress-nginx.svc.cluster.local:443:127.0.0.1 \
        https://ingress-nginx-controller.ingress-nginx.svc.cluster.local:443/metrics \
        | grep "kubenurse_request_" | grep 'type="path_' > /dev/null
      echo "Metrics contains neighbours"
      curl -k -s --resolve \
        ingress-nginx-controller.ingress-nginx.svc.cluster.local:443:127.0.0.1 \
        https://ingress-nginx-controller.ingress-nginx.svc.cluster.local:443/metrics \
        | (! grep "kubenurse_errors_total")
      echo "Metrics contains no errors"
      curl -k -s --resolve \
        ingress-nginx-controller.ingress-nginx.svc.cluster.local:443:127.0.0.1 \
        https://ingress-nginx-controller.ingress-nginx.svc.cluster.local:443/alive \
        | grep '"neighbourhood_state": "ok"' > /dev/null
      echo "Neighbourhood state ok"
      curl -k -s --resolve \
        ingress-nginx-controller.ingress-nginx.svc.cluster.local:443:127.0.0.1 \
        https://ingress-nginx-controller.ingress-nginx.svc.cluster.local:443/alive \
        | grep '"neighbourhood": \[' > /dev/null # If no others are discovered, this is null
      echo "Discovery ok: Status page includes neighbours"
  - name: Show kubenurse status
    shell: bash
    run: |
      curl -k -s --resolve \
        ingress-nginx-controller.ingress-nginx.svc.cluster.local:443:127.0.0.1 \
        https://ingress-nginx-controller.ingress-nginx.svc.cluster.local:443/alive
    if: ${{ always() }}
  - name: Describe resources on failure
    shell: bash
    run: |
      kubectl -n kube-system get pods -o wide
      kubectl -n kube-system logs -l app=kubenurse
      kubectl -n kube-system describe pods -l app=kubenurse
      kubectl -n kube-system describe daemonsets -l app=kubenurse
      kubectl -n kube-system get events
    if: ${{ failure() }}
